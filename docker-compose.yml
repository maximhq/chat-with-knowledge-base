services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: chat-kb-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-chat_kb}
      MYSQL_USER: ${MYSQL_USER:-chatuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: chat-kb-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Maxim AI Bifrost LLM Gateway
  bifrost:
    image: maximhq/bifrost:latest
    container_name: chat-kb-bifrost
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - APP_PLUGINS=maxim
      - MAXIM_API_KEY=${MAXIM_API_KEY}
      - MAXIM_LOG_REPO_ID=${MAXIM_LOG_REPO_ID}
    volumes:
      - bifrost_data:/app/data
    networks:
      - chat-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-kb-web
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      # Database
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}

      # Auth.js
      # - AUTH_URL=${AUTH_URL}
      - AUTH_SECRET=${AUTH_SECRET}

      # Email (configure with your SMTP settings)
      - RESEND_API_KEY=${RESEND_API_KEY}
      - EMAIL_FROM=${EMAIL_FROM}
      - ALLOWED_EMAIL_DOMAINS=${ALLOWED_EMAIL_DOMAINS}

      # Bifrost LLM Gateway
      - BIFROST_API_URL=http://bifrost:8080
      - BIFROST_API_KEY=

      # Qdrant Vector Database
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY=

      # File uploads
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}

      # App config
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
    volumes:
      - uploads_data:/app/uploads
    networks:
      - chat-network
    depends_on:
      - db
      - qdrant
      - bifrost
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local
  qdrant_data:
    driver: local
  bifrost_data:
    driver: local

networks:
  chat-network:
    driver: bridge
